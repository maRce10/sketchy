% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_to_gitignore.R
\name{add_to_gitignore}
\alias{add_to_gitignore}
\title{Add entries to gitignore}
\usage{
add_to_gitignore(add.to.gitignore = FALSE, cutoff = 99, extension = NULL)
}
\arguments{
\item{add.to.gitignore}{Logical to control if files are added to 'gitignore' or just printed on the console.}

\item{cutoff}{Numeric. Defines the file size (in MB) cutoff used to find files (i.e. only files above the threshold would returned). 99 (MB) is recommended when hosting projects at github as the current file size limit is 100 MB. Default is 99.}

\item{extension}{Character string to define the file extension of the files to be searched for.}
}
\value{
Prints the name of the files matching the searching parameters. If \code{add.to.ignore = TRUE} the files matching the search parameters ('cutoff' and/or 'extension') would be added 'gitignore' (a file used by git to exclude files form version control, including adding them to github). Hence this can be used to avoid conflicts when working with large files or just avoid adding non-binary files to remote repositories. This function mostly aims to simplify spotting large files. Note that file names can be manually added to
}
\description{
\code{add_to_gitignore} adds entries to gitignore files
}
\details{
The function can be used large size files h.
}
\examples{
{
data(compendiums)

make_compendium(name = "my_compendium", path = tempdir(),
 format = compendiums$basic$skeleton, force = TRUE)

# must start git monitoring at this point

# now can add files to gitignore
# add_to_gitignore(add.to.gitignore = TRUE)
}

}
\references{
{
Araya-Salas, M., Willink, B., Arriaga, A. (2020), sketchy: research compendiums for data analysis in R. R package version 1.0.0.
}
}
\seealso{
\code{\link{compendiums}}, \code{\link{make_compendium}}
}
\author{
Marcelo Araya-Salas (\email{marcelo.araya@ucr.ac.cr})
}
